#include <iostream>
#include <stack>
using namespace std;
// Function to check if the character is an operator
bool IsOperator(char c) {
    return (c == '+' || c == '-' || c == '*' || c == '/');
}

// Function to perform an operation and return the result
int PerformOperation(char operation, int operand1, int operand2) {
    switch (operation) {
        case '+': return operand1 + operand2;
        case '-': return operand1 - operand2;
        case '*': return operand1 * operand2;
        case '/': return operand1 / operand2;
        default: return -1;
    }
}
// Function to evaluate a prefix expression
int EvaluatePrefix(const string& prefix) {
    stack<int> S;

    // Reverse traverse the prefix expression
    for (int i = prefix.length() - 1; i >= 0; --i) {
        char ch = prefix[i];


        if (isdigit(ch)) {
            S.push(ch - '0'); // Convert char to int
        }
        else if (IsOperator(ch)) {
            int operand1 = S.top(); S.pop();
            int operand2 = S.top(); S.pop();
            int result = PerformOperation(ch, operand1, operand2);
            S.push(result);
        }
    }
    return S.top();
}

int main() {
    string prefix_expression;
    cout << "Enter a prefix expression: ";
    cin >> prefix_expression;

    int result = EvaluatePrefix(prefix_expression);

    cout << "The result of the prefix expression is: " << result << endl;

    return 0;
}
